name: Build and publish

on:
  workflow_dispatch:

env:
  OUTPUT_PATH: ./IndustrialPark/bin/Release/net8.0-windows7.0/

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            submodules: recursive

      - name: Cache dotnet
        id: cache-dotnet
        uses: actions/cache@v3
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-dotnet-8

      - name: Set up .NET 8
        if: steps.cache-dotnet.outputs.cache-hit != 'true'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Set timezone
        run: tzutil /s "W. Europe Standard Time"

      - name: Clone RenderWare repo
        run: git clone https://github.com/energydrink02/RenderWare.git

      - name: Cache RenderWare
        id: cache-renderware
        uses: actions/cache@v3
        with:
          path: ./RenderWare
          key: renderware-cache-${{ hashFiles('./RenderWare/**/*.cpp', './RenderWare/**/*.vcxproj', './RenderWare/**/*.h') }}
        
      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        id: build_solution
        shell: pwsh
        run: |
          $currentDate = Get-Date -Format "yyyy.MM.dd"
          $secondsInDay = [math]::Round((Get-Date).TimeOfDay.TotalSeconds)
          $buildVersion = "$($currentDate)-$($secondsInDay)"
          
          dotnet build -c Release /p:Version=$($buildVersion) --no-restore 
          echo "build_version=$buildVersion" >> $env:GITHUB_OUTPUT

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build renderware
        if: steps.cache-renderware.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          cd ./RenderWare
          msbuild -t:restore -p:RestorePackagesConfig=true
          msbuild /p:Configuration=Release /p:Platform=x86
          cd .. 

      - name: Move renderware to IP
        shell: pwsh
        run: |
          $robocopy_process = Start-Process "robocopy" -ArgumentList "./RenderWare/Release ${{ env.OUTPUT_PATH }}Resources/RenderWare *.dll *.exe" -PassThru -Wait 
          if ($robocopy_process.ExitCode -ne 1) { exit $robocopy_process.ExitCode }
          Copy-Item -Path ./RenderWare/assimp/assimp-vc143-mtd.dll -Destination ${{ env.OUTPUT_PATH}}Resources/RenderWare
          
      - name: Clean and zip output
        run: |
          cd ${{ env.OUTPUT_PATH }}
          del *.pdb
          Compress-Archive * -DestinationPath ${{ github.workspace }}/IndustrialPark_v${{ steps.build_solution.outputs.build_version }}.zip
          
      - uses: actions/upload-artifact@v4
        with:
          name: IndustrialPark_v${{ steps.build_solution.outputs.build_version }}
          path: ${{ env.OUTPUT_PATH }}
          
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.build_solution.outputs.build_version }}',
              sha: context.sha
            })
            
      - name: Create Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Industrial Park v${{ steps.build_solution.outputs.build_version }}
          generate_release_notes: true
          draft: true
          tag_name: v${{ steps.build_solution.outputs.build_version }}
          files: |
            IndustrialPark_v${{ steps.build_solution.outputs.build_version }}.zip
